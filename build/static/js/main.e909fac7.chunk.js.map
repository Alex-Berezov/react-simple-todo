{"version":3,"sources":["assets/img/remove.svg","components/List/index.jsx","components/Badge/index.jsx","assets/img/close.svg","components/AddList/index.jsx","assets/img/edit.svg","assets/img/add.svg","components/Tasks/AddTaskLists.jsx","components/Tasks/Task.jsx","components/Tasks/index.jsx","App.js","index.js"],"names":["List","items","isRemovable","onClick","onRemove","onClickItem","activeItem","className","map","item","index","classNames","active","id","icons","color","name","tasks","length","window","confirm","axios","delete","then","removeList","src","removeSvg","alt","Badge","AddList","colors","onAdd","useState","visiblePopup","setVisiblePopup","selectedColor","setSelectedColor","isLoading","setIsLoading","inputValue","setInputValue","useEffect","Array","isArray","onClose","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","closeSvg","type","placeholder","value","onChange","e","target","alert","post","colorId","data","filter","c","listObj","catch","finally","AddTaskLists","list","onAddTask","visibleForm","setVisibleForm","isSending","setIsSending","toggleFormVisible","obj","addSvg","Task","text","completed","onEdit","onComplete","checked","htmlFor","Tasks","onEditTitle","withoutEmpty","onRemoveTask","onEditTask","onCompleteTask","to","style","hex","newTitle","prompt","patch","editSvg","task","App","lists","setLists","setColors","setActiveItem","history","useHistory","location","useLocation","get","listId","taskObj","newList","taskId","newTaskText","onEditListTitle","title","pathname","split","find","Number","push","newLists","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e909fac7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/remove.618167a4.svg\";","import React from 'react'\r\nimport classNames from 'classnames'\r\nimport axios from \"axios\";\r\n\r\nimport './List.scss'\r\nimport {Badge} from \"../../components\";\r\nimport removeSvg from \"../../assets/img/remove.svg\"\r\n\r\nconst List = ({items, isRemovable, onClick, onRemove, onClickItem, activeItem}) => {\r\n\r\n    const removeList = (item) => {\r\n        if (window.confirm('Вы действительно хотите удалить список?')) {\r\n            axios.delete('http://localhost:3001/lists/' + item.id).then(() => {\r\n                onRemove(item.id);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ul onClick={onClick} className=\"todo__sidebar-list\">\r\n            {\r\n                items.map((item, index) => <li\r\n                    className={classNames(item.className, {\r\n                        active: item.active ? item.active : activeItem && activeItem.id === item.id})\r\n                    }\r\n                    key={item + index}\r\n                    onClick={onClickItem ? () => onClickItem(item) : null}\r\n                >\r\n                    <i>{item.icons ? item.icons : <Badge color={item.color.name}/>}</i>\r\n                    <span>\r\n                        {item.name}\r\n                        {item.tasks && ` (${item.tasks.length})`}\r\n                    </span>\r\n                    {isRemovable &&\r\n                    <img\r\n                        onClick={() => removeList(item)}\r\n                        className=\"list__remove_icon\"\r\n                        src={removeSvg}\r\n                        alt=\"Remove icon\"\r\n                    />}\r\n                </li>)\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport classNames from 'classnames'\r\n\r\nimport './Badge.scss';\r\n\r\nconst Badge = ({ color, onClick, className }) => (\r\n    <i\r\n        onClick={onClick}\r\n        className={classNames('badge', { [`badge--${color}`]: color }, className)}\r\n    />\r\n);\r\n\r\nexport default Badge;","export default __webpack_public_path__ + \"static/media/close.ac7b9278.svg\";","import React, {useState, useEffect} from 'react';\r\nimport List from \"../List\";\r\n\r\nimport './AddList.scss'\r\nimport Badge from \"../Badge\";\r\nimport closeSvg from '../../assets/img/close.svg'\r\nimport axios from \"axios\";\r\n\r\nfunction AddList({colors, onAdd}) {\r\n    const [visiblePopup, setVisiblePopup] = useState(false);\r\n    const [selectedColor, setSelectedColor] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(colors)) {\r\n            setSelectedColor(colors[0].id);\r\n        }\r\n    }, [colors]);\r\n\r\n    const handleWriteText = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const onClose = () => {\r\n        setVisiblePopup(false)\r\n        setInputValue('')\r\n        setSelectedColor(colors[0].id)\r\n    }\r\n\r\n    const addNewList = () => {\r\n        if (!inputValue) {\r\n            alert('Заполните название списка')\r\n        }\r\n        setIsLoading(true);\r\n        axios.post('http://localhost:3001/lists', {\r\n            name: inputValue,\r\n            colorId: selectedColor\r\n        }).then(({data}) => {\r\n            const color = colors.filter(c => c.id === selectedColor)[0];\r\n            const listObj = {...data, color, tasks: []};\r\n            onAdd(listObj);\r\n            onClose();\r\n        }).catch(() => {\r\n            alert('Ошибка при добавлении списка')\r\n        }).finally(() => {\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"add__list\">\r\n            <List\r\n                onClick={() => setVisiblePopup(true)}\r\n                items={[\r\n                    {\r\n                        className: \"list__add-button\",\r\n                        icons: <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M6 1V11\" stroke=\"#000000\" strokeWidth=\"1.5\" strokeLinecap=\"round\"\r\n                                  strokeLinejoin=\"round\"/>\r\n                            <path d=\"M1 6H11\" stroke=\"#000000\" strokeWidth=\"1.5\" strokeLinecap=\"round\"\r\n                                  strokeLinejoin=\"round\"/>\r\n                        </svg>,\r\n                        name: 'Добавить список'\r\n                    }\r\n                ]}\r\n            />\r\n            {visiblePopup && (\r\n                <div className=\"add__list_popup\">\r\n                    <img\r\n                        onClick={onClose}\r\n                        src={closeSvg}\r\n                        alt=\"Close popup btn\"\r\n                        className=\"add__list_popup_close-btn\"/>\r\n\r\n                    <input\r\n                        className=\"field\"\r\n                        type=\"text\"\r\n                        placeholder=\"Название списка\"\r\n                        value={inputValue}\r\n                        onChange={handleWriteText}\r\n\r\n                    />\r\n\r\n                    <div className=\"add__list_popup-colors\">\r\n                        {\r\n                            colors.map(color => (\r\n                                <Badge\r\n                                    onClick={() => setSelectedColor(color.id)}\r\n                                    color={color.name}\r\n                                    key={color.id}\r\n                                    className={selectedColor === color.id && 'active'}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <button onClick={addNewList} className=\"button\">\r\n                        {isLoading ? 'Добавление...' : 'Добавить'}\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddList;","export default __webpack_public_path__ + \"static/media/edit.d48cb023.svg\";","export default __webpack_public_path__ + \"static/media/add.bb82cf25.svg\";","import React, {useState} from 'react';\r\n\r\nimport addSvg from \"../../assets/img/add.svg\";\r\nimport './Tasks.scss'\r\nimport axios from \"axios\";\r\n\r\nfunction AddTaskLists({list, onAddTask}) {\r\n    const [visibleForm, setVisibleForm] = useState(false)\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [isSending, setIsSending] = useState(false)\r\n\r\n    const toggleFormVisible = () => {\r\n        setVisibleForm(!visibleForm)\r\n        setInputValue('')\r\n    }\r\n\r\n    const onInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const addTask = () => {\r\n        const obj = {\r\n            \"listId\": list.id,\r\n            \"text\": inputValue,\r\n            \"completed\": false\r\n        }\r\n        setIsSending(true)\r\n        axios.post('http://localhost:3001/tasks', obj)\r\n            .then(({data}) => {\r\n                onAddTask(list.id, data)\r\n                toggleFormVisible()\r\n            }).catch(() => {\r\n            alert('Ошибка при добавлении задачи')\r\n        }).finally(() => {\r\n            setIsSending(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            {!visibleForm\r\n                ? <div onClick={toggleFormVisible} className=\"form_close\">\r\n                    <img src={addSvg} alt=\"Add task\"/>\r\n                    <p>Новая задача</p>\r\n                </div>\r\n                : <div className=\"form_open\">\r\n                    <input\r\n                        className=\"field\"\r\n                        type=\"text\"\r\n                        placeholder=\"Текст задачи\"\r\n                        value={inputValue}\r\n                        onChange={onInputChange}\r\n                    />\r\n                    <div className=\"form__buttons\">\r\n                        <button onClick={addTask} className=\"send\">\r\n                            {isSending ? 'Добавление...' : 'Добавить задачу'}\r\n                        </button>\r\n                        <button onClick={toggleFormVisible} className=\"cancel\">Отмена</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddTaskLists;","import React from 'react';\r\n\r\nfunction Task({id, text, list, completed, onRemove, onEdit, onComplete}) {\r\n    const onChangeCheckbox = e => {\r\n        onComplete(list.id, id, e.target.checked)\r\n    }\r\n\r\n    return (\r\n        <div className=\"items_row\">\r\n            <div className=\"checkbox\">\r\n                <input onChange={onChangeCheckbox} id={`task-${id}`} type=\"checkbox\" checked={completed}/>\r\n                <label htmlFor={`task-${id}`}>\r\n                    <svg\r\n                        width=\"11\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 11 8\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\"\r\n                            stroke=\"#000\"\r\n                            strokeWidth=\"1.5\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                        />\r\n                    </svg>\r\n                </label>\r\n            </div>\r\n            <p className=\"text\">{text}</p>\r\n            <div className=\"actions\">\r\n                <div onClick={() => onEdit(list.id, {id, text})} className=\"edit\">\r\n                    <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9338 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.6379 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825Z\"\r\n                            fill=\"#DFDFDF\"/>\r\n                    </svg>\r\n                </div>\r\n                <div onClick={() => onRemove(list.id, id)} className=\"delete\">\r\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M6.24741 5L9.73899 1.50842C9.9047 1.343 9.99791 1.11853 9.99812 0.884393C9.99832 0.650251 9.90551 0.425617 9.74009 0.259907C9.57468 0.0941973 9.35021 0.000986589 9.11606 0.000779811C8.88192 0.000573033 8.65729 0.0933872 8.49158 0.258804L5 3.75038L1.50842 0.258804C1.34271 0.0930948 1.11796 0 0.883613 0C0.649264 0 0.424514 0.0930948 0.258804 0.258804C0.0930948 0.424514 0 0.649264 0 0.883613C0 1.11796 0.0930948 1.34271 0.258804 1.50842L3.75038 5L0.258804 8.49158C0.0930948 8.65729 0 8.88204 0 9.11639C0 9.35074 0.0930948 9.57549 0.258804 9.7412C0.424514 9.90691 0.649264 10 0.883613 10C1.11796 10 1.34271 9.90691 1.50842 9.7412L5 6.24962L8.49158 9.7412C8.65729 9.90691 8.88204 10 9.11639 10C9.35074 10 9.57549 9.90691 9.7412 9.7412C9.90691 9.57549 10 9.35074 10 9.11639C10 8.88204 9.90691 8.65729 9.7412 8.49158L6.24741 5Z\"\r\n                            fill=\"#E3E3E3\"/>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './Tasks.scss'\r\nimport editSvg from \"../../assets/img/edit.svg\";\r\nimport AddTaskLists from \"./AddTaskLists\";\r\nimport Task from \"./Task\";\r\n\r\nfunction Tasks({ list, onEditTitle, onAddTask, withoutEmpty, onRemoveTask, onEditTask, onCompleteTask }) {\r\n\r\n    const editTitle = () => {\r\n        const newTitle = window.prompt('Введите новое название', list.name)\r\n        if (newTitle) {\r\n            onEditTitle(list.id, newTitle)\r\n            axios.patch('http://localhost:3001/lists/' + list.id, {\r\n                name: newTitle\r\n            }).catch(() => {\r\n                alert('Не удалось обновить название')\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo__tasks_task\">\r\n            <div className=\"header\">\r\n                <Link to={`/lists/${list.id}`}>\r\n                    <h2 style={{ color: list.color.hex }}>{list.name}</h2>\r\n                </Link>\r\n                <img onClick={editTitle} src={editSvg} alt=\"Edit header\"/>\r\n            </div>\r\n            <hr/>\r\n\r\n            <div className=\"items\">\r\n                {!withoutEmpty && list.tasks && !list.tasks.length && <h2>Задачи отсутствуют</h2>}\r\n                {list.tasks && list.tasks.map(task => (\r\n                    <Task\r\n                        key={task.id}\r\n                        onRemove={onRemoveTask}\r\n                        onEdit={onEditTask}\r\n                        onComplete={onCompleteTask}\r\n                        list={list}\r\n                        {...task}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <AddTaskLists key={list.id} list={list} onAddTask={onAddTask}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks;","import React, {useState, useEffect} from 'react';\nimport {List, AddList, Tasks} from \"./components\";\nimport {Route, useHistory, useLocation} from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction App() {\n\n    const [lists, setLists] = useState(null)\n    const [colors, setColors] = useState(null)\n    const [activeItem, setActiveItem] = useState(null)\n    let history = useHistory(),\n        location = useLocation();\n\n    useEffect(() => {\n        axios\n            .get('http://localhost:3001/lists?_expand=color&_embed=tasks')\n            .then(({data}) => {\n                setLists(data);\n            });\n        axios.get('http://localhost:3001/colors').then(({data}) => {\n            setColors(data);\n        });\n    }, [])\n\n    const onAddList = (obj) => {\n        const newList = [...lists, obj]\n        setLists(newList)\n    }\n\n    const onAddTask = (listId, taskObj) => {\n        const newList = lists.map(item => {\n            if (item.id === listId) {\n                item.tasks = [...item.tasks, taskObj]\n            }\n            return item\n        })\n        setLists(newList)\n    }\n\n    const onRemoveTask = (listId, taskId) => {\n        if (window.confirm('Вы действительно хотите удалить задачу?')) {\n            const newList = lists.map(item => {\n                if (item.id === listId) {\n                    item.tasks = item.tasks.filter(task => task.id !== taskId);\n                }\n                return item;\n            });\n            setLists(newList);\n            axios.delete('http://localhost:3001/tasks/' + taskId).catch(() => {\n                alert('Не удалось удалить задачу');\n            });\n        }\n    }\n\n    const onEditTask = (listId, taskObj) => {\n        const newTaskText = window.prompt('Текст задачи', taskObj.text);\n\n        if (!newTaskText) {\n            return;\n        }\n\n        const newList = lists.map(list => {\n            if (list.id === listId) {\n                list.tasks = list.tasks.map(task => {\n                    if (task.id === taskObj.id) {\n                        task.text = newTaskText;\n                    }\n                    return task;\n                });\n            }\n            return list;\n        });\n        setLists(newList);\n        axios\n            .patch('http://localhost:3001/tasks/' + taskObj.id, {\n                text: newTaskText\n            })\n            .catch(() => {\n                alert('Не удалось обновить задачу');\n            });\n    }\n\n    const onEditListTitle = (id, title) => {\n        const newList = lists.map(item => {\n            if (item.id === id) {\n                item.name = title\n            }\n            return item\n        })\n        setLists(newList)\n    }\n\n    const onCompleteTask = (listId, taskId, completed) => {\n        const newList = lists.map(list => {\n            if (list.id === listId) {\n                list.tasks = list.tasks.map(task => {\n                    if (task.id === taskId) {\n                        task.completed = completed;\n                    }\n                    return task;\n                });\n            }\n            return list;\n        });\n        setLists(newList);\n        axios\n            .patch('http://localhost:3001/tasks/' + taskId, {\n                completed\n            })\n            .catch(() => {\n                alert('Не удалось обновить задачу');\n            });\n    };\n\n    useEffect(() => {\n        const listId = location.pathname.split('lists/')[1];\n        if (lists) {\n            const list = lists.find(list => list.id === Number(listId));\n            setActiveItem(list);\n        }\n    }, [lists, location.pathname]);\n\n    return (\n        <div className=\"todo\">\n            <div className=\"todo__sidebar\">\n                <List\n                    onClickItem={list => {\n                        history.push(\"/\")\n                    }}\n                    items={[\n                        {\n                            activeItem: true,\n                            icons: <svg width=\"14\" height=\"12\" viewBox=\"0 0 14 12\" fill=\"none\"\n                                        xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    d=\"M10.96 5.10001H5.74001C5.24321 5.10001 5.20001 5.50231 5.20001 6.00001C5.20001 6.49771 5.24321 6.90001 5.74001 6.90001H10.96C11.4568 6.90001 11.5 6.49771 11.5 6.00001C11.5 5.50231 11.4568 5.10001 10.96 5.10001ZM12.76 9.60001H5.74001C5.24321 9.60001 5.20001 10.0023 5.20001 10.5C5.20001 10.9977 5.24321 11.4 5.74001 11.4H12.76C13.2568 11.4 13.3 10.9977 13.3 10.5C13.3 10.0023 13.2568 9.60001 12.76 9.60001ZM5.74001 2.40001H12.76C13.2568 2.40001 13.3 1.99771 13.3 1.50001C13.3 1.00231 13.2568 0.600006 12.76 0.600006H5.74001C5.24321 0.600006 5.20001 1.00231 5.20001 1.50001C5.20001 1.99771 5.24321 2.40001 5.74001 2.40001ZM2.86001 5.10001H1.24001C0.743212 5.10001 0.700012 5.50231 0.700012 6.00001C0.700012 6.49771 0.743212 6.90001 1.24001 6.90001H2.86001C3.35681 6.90001 3.40001 6.49771 3.40001 6.00001C3.40001 5.50231 3.35681 5.10001 2.86001 5.10001ZM2.86001 9.60001H1.24001C0.743212 9.60001 0.700012 10.0023 0.700012 10.5C0.700012 10.9977 0.743212 11.4 1.24001 11.4H2.86001C3.35681 11.4 3.40001 10.9977 3.40001 10.5C3.40001 10.0023 3.35681 9.60001 2.86001 9.60001ZM2.86001 0.600006H1.24001C0.743212 0.600006 0.700012 1.00231 0.700012 1.50001C0.700012 1.99771 0.743212 2.40001 1.24001 2.40001H2.86001C3.35681 2.40001 3.40001 1.99771 3.40001 1.50001C3.40001 1.00231 3.35681 0.600006 2.86001 0.600006Z\"\n                                    fill=\"#7C7C7C\"/>\n                            </svg>,\n                            name: 'Все задачи',\n                            active: history.location.pathname === '/',\n                        }\n                    ]}\n                />\n                {lists ? (\n                    <List\n                        items={lists}\n                        onRemove={id => {\n                            const newLists = lists.filter(item => item.id !== id);\n                            setLists(newLists);\n                        }}\n                        onClickItem={list => {\n                            history.push(`/lists/${list.id}`)\n                        }}\n                        activeItem={activeItem}\n                        isRemovable\n                    />\n                ) : (\n                    'Загрузка...'\n                )}\n                <AddList onAdd={onAddList} colors={colors}/>\n            </div>\n            <div className=\"todo__tasks\">\n                <Route exact path=\"/\">\n                    {\n                        lists && lists.map(list => (\n                            <Tasks\n                                key={list.id}\n                                list={list}\n                                onEditTitle={onEditListTitle}\n                                onAddTask={onAddTask}\n                                onRemoveTask={onRemoveTask}\n                                onEditTask={onEditTask}\n                                onCompleteTask={onCompleteTask}\n                                withoutEmpty\n                            />\n                        ))\n                    }\n                </Route>\n                <Route path=\"/lists/:id\">\n\n                    {lists && activeItem &&\n                    <Tasks\n                        list={activeItem}\n                        onEditTitle={onEditListTitle}\n                        onAddTask={onAddTask}\n                        onRemoveTask={onRemoveTask}\n                        onEditTask={onEditTask}\n                        onCompleteTask={onCompleteTask}\n                    />\n                    }\n                </Route>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n          <App />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}